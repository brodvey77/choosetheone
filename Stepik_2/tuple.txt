Тема урока: кортежи
Перебор кортежей
Сравнение кортежей
Сортировка кортежей
Преобразование кортежа в список и строку
Упаковка кортежей
Распаковка кортежей
Присваивание кортежей
Аннотация. Урок посвящен кортежам (тип данных tuple).

Перебор кортежей
Перебор элементов кортежа осуществляется точно так же как перебор элементов списка.

Для вывода каждого из элементов кортежа  на отдельной строке можно использовать следующий код:

Вариант 1. Если нужны индексы элементов:

numbers = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

for i in range(len(numbers)):
    print(numbers[i])
Вариант 2. Если индексы не нужны:

numbers = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

for num in numbers:
    print(num)
Можно также использовать операцию распаковки кортежа.

Приведенный ниже код:

numbers = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
languages = ('Python', 'C++', 'Java')

print(*numbers)
print(*languages, sep='\n')
выводит:

0 1 2 3 4 5 6 7 8 9 10
Python
C++
Java
Сравнение кортежей
Кортежи можно сравнивать между собой.

Приведенный ниже код:

print((1, 8) == (1, 8))
print((1, 8) != (1, 10))
print((1, 9) < (1, 2))
print((2, 5) < (6,))
print(('a', 'bc') > ('a', 'de'))
выводит:

True
True
False
True
False
Обратите внимание: операции == и != применимы к любым кортежам, независимо от типов элементов. А вот операции <, >, <=, >= применимы только в том случае, когда соответствующие элементы кортежей имеют один тип.

Приведенный ниже код:

print((7, 5) < ('java', 'python'))
выводит:

TypeError: '<' not supported between instances of 'int' and 'str'
Сравнение кортежей происходит последовательно элемент за элементом, а если элементы равны — просматривается следующий элемент.

Сортировка кортежей
Как мы помним, списки имеют метод sort(), который осуществляет сортировку на месте, то есть меняет порядок исходного списка. Поскольку кортежи по своей природе неизменяемы, то встроенного метода sort() они не содержат, тем не менее с помощью встроенной функции sorted() (не путать с списочным методом sort()) мы можем сортировать значения в кортежах.

Приведенный ниже код:

not_sorted_tuple = (34, 1, 8, 67, 5, 9, 0, 23)
print(not_sorted_tuple)

sorted_tuple = tuple(sorted(not_sorted_tuple))
print(sorted_tuple)
выводит:

(34, 1, 8, 67, 5, 9, 0, 23)
(0, 1, 5, 8, 9, 23, 34, 67)
Обратите внимание, что функция sorted() возвращает список, но с помощью функции tuple() мы приводим результат сортировки к кортежу.

Для сортировки кортежа можно воспользоваться явным преобразованием в список и использовать метод sort():

not_sorted_tuple = ('cc', 'aa', 'dd', 'bb')
tmp = list(not_sorted_tuple)
tmp.sort()

sorted_tuple = tuple(tmp)
print(sorted_tuple)
Преобразование кортежа в список и строку
Часто на практике нам приходится преобразовывать кортежи в списки и в строки. Для этого используются функции и методы str(), list(), tuple(), join().

Преобразование кортежа в список и наоборот
Кортеж можно преобразовать в список с помощью функции list().

Приведенный ниже код:

tuple1 = (1, 2, 3, 4, 5)
list1 = list(tuple1)
print(list1)
выводит:

[1, 2, 3, 4, 5]
Список можно преобразовать в кортеж с помощью функции tuple().

Приведенный ниже код:

list1 = [1, 17.8, 'Python']
tuple1 = tuple(list1)
print(tuple1)
выводит:

(1, 17.8, 'Python')
Преобразование кортежа в строку и наоборот
Кортеж можно преобразовать в строку с помощью строкового метода join().

Приведенный ниже код:

notes = ('Do', 'Re', 'Mi', 'Fa', 'Sol', 'La', 'Si')
string1 = ''.join(notes)
string2 = '.'.join(notes)

print(string1)
print(string2)
выводит:

DoReMiFaSolLaSi
Do.Re.Mi.Fa.Sol.La.Si
Обратите внимание, что для применения строкового метода join() кортеж должен содержать именно строковые элементы. Если элементы кортежа отличны от строк, то требуется предварительно их преобразовать.

Строку можно преобразовать в кортеж с помощью функции tuple().

Приведенный ниже код:

letters = 'abcdefghijkl'
tpl = tuple(letters)
print(tpl)
выводит:

('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l')
Обратите внимание, что следующий код:

number = 12345
tpl = tuple(number)
print(tpl)
приведет к ошибке:

TypeError: 'int' object is not iterable
поскольку тип данных int не является итерируемым объектом. Для преобразования числа в кортеж, сначала нужно число преобразовать в строку, а уже потом использовать функцию tuple().